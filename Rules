#!/usr/bin/env ruby
#compile '/posts/*', :rep => :default do
#  filter :fix_images
#  filter :embed
#  filter :replacements
#  filter :redcarpet, options: {:fenced_code_blocks => true, :tables => true, :no_intra_emphasis => true,
#    :autolink => true, :strikethrough => true, :superscript => true, :with_toc_data => true}
#  filter :colorize_syntax, :default_colorizer => :pygmentsrb
#  filter :wiki
#  filter :fast
#  filter :mytoc if item.attributes[:toc]
#  layout 'post'
#end

#route '/posts/*', :rep => :default do
#  y,m,d,slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+)/.match(item.identifier)
#  #y,m,d,slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+)/.match(item.identifier).captures

#  if item[:status]
#    "/blog/#{item[:status]}/#{y}/#{m}/#{d}/#{slug}/index.html"
#  else
#    "/blog/#{y}/#{m}/#{d}/#{slug}/index.html"
#  end
#end

compile '/posts/*' do
  filter :kramdown
  rep.layout 'post'
  rep.layout 'default'
end

#route '/posts/*', :rep => :md do
#  #y,m,d,slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+)/.match(item.identifier).captures
#  y,m,d,slug = /([0-9]+)\-([0-9]+)\-([0-9]+)\-([^\/]+)/.match(item.identifier)
#  "/blog/#{y}/#{m}/#{d}/#{slug}/index.md"
#end

compile '/robots/' do
  # dont filter or layout
end

route '/robots/' do
  '/robots.txt'
end

compile '/images/*' do
  # dont filter or layout
end

route '/images/*/' do
  item.identifier.chop + '.' + item[:extension]
end

compile '/styles/*' do
  # dont filter or layout
end

route '/styles/*/' do
  item.identifier.chop + '.' + item[:extension]
end

compile '/scripts/*' do
  # dont filter or layout
end

route '/scripts/*/' do
  item.identifier.chop + '.' + item[:extension]
end

compile '/favicon/' do
  # dont filter or layout
end

route '/favicon/' do
  '/favicon.ico'
end

compile '*' do
    if item[:extension] == 'md'
      filter :kramdown
    elsif item[:extension] == 'md'
      filter :kramdown
    else
      filter :haml
      layout 'default'
    end
end

route '*' do
  item.identifier + 'index.html'
end

layout '*', :haml, :format => :html5
